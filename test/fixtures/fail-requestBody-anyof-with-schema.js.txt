module.exports = {
  validateArgs: {
  "paths": {
    "/pets": {
      "patch": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/PetByAge"
                  },
                  {
                    "$ref": "#/components/schemas/PetByType"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PetByAge": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "age": {
            "type": "integer"
          },
          "nickname": {
            "type": "string"
          }
        },
        "required": [
          "age"
        ]
      },
      "PetByType": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "pet_type": {
            "type": "string",
            "enum": [
              "Cat",
              "Dog"
            ]
          },
          "hunts": {
            "type": "boolean"
          }
        },
        "required": [
          "pet_type"
        ]
      }
    }
  }
  },
  request: {
    body: {
      "nickname": "Mr. Paws",
      "hunts": false
    },
  },
  expectedErrors: [
      {
         "code": "Validation-required",
         "source": {
           "pointer": "#/components/schemas/PetByAge/required",
         },
         "status": 400,
         "title": "must have required property 'age'",
       },
       {
         "code": "Validation-required",
         "source": {
           "pointer": "#/components/schemas/PetByType/required",
         },
         "status": 400,
         "title": "must have required property 'pet_type'",
       },
       {
         "code": "Validation-anyOf",
         "source": {
           "pointer": "#/anyOf",
         },
         "status": 400,
         "title": "must match a schema in anyOf",
       },
  ]
};