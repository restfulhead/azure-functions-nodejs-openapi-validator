openapi: '3.0.0'
info:
  title: Test API
  version: '1.0'
security:
  - apiKeyHeader: []
  - apiKeyQuery: []
  
paths:
  '/users':
    post:
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUserRequest'
        required: true
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          $ref: '#/components/responses/ResponseError'
        '500':
          $ref: '#/components/responses/ResponseError'
    get:
      parameters:
        - name: page
          in: query
          description: >
            Use the `page[offset]` and `page[limit]` parameters to paginate through the results.
          schema:
            $ref: '#/components/schemas/PageParam'
          style: deepObject
          explode: true
          required: true
  '/users/{uid}':
    get:
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
        - name: optionalparam
          in: query
          schema:
            type: string
        - name: requirednumberparam
          in: query
          required: true
          schema:
            type: number
        - name: integerparam
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          $ref: '#/components/responses/ResponseError'
        '500':
          $ref: '#/components/responses/ResponseError'
    
          
components:
  responses:
    ResponseError:
      description: An unexpected server error occurred
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Failure'

  schemas:
    Links:
      type: object
      additionalProperties:
        type: string
    Failure:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            '$ref': '#/components/schemas/ApiError'
          uniqueItems: true
    ApiError:
      type: object
      required:
        - status
        - code
        - title
      properties:
        id:
          description: A unique identifier for this particular occurrence of the problem.
          type: string
        links:
          '$ref': '#/components/schemas/Links'
        status:
          description: The HTTP status code applicable to this problem
          type: integer
          minimum: 100
          maximum: 599
        code:
          description: An application-specific error code, expressed as a string value.
          type: string
          enum: ["Unknown", "Validation", "Validation-required", "Validation-maxLength", "Validation-minLength", "Validation-type", "Validation-maximum", "Validation-minimum"]
        title:
          description: A short, human-readable summary of the problem. It **SHOULD NOT**
            change from occurrence to occurrence of the problem, except for purposes
            of localization.
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of the
            problem.
          type: string
        source:
          type: object
          properties:
            pointer:
              description: A JSON Pointer [RFC6901] to the associated entity in the
                request document [e.g. "/data" for a primary data object, or "/data/attributes/title"
                for a specific attribute].
              type: string
            parameter:
              description: A string indicating which query parameter caused the error.
              type: string
   
    PageParam:
      type: object
      properties:
        limit:
          type: integer
        offset:
          type: integer
        nextLink:
          type: string

    OffsetPagination:
      type: object
      required:
        - total
      properties:
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
    
    PutUserRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string

    UserResponse:
      type: object
      required:
        - name
        - id
      properties:
        name:
          type: string
        id:
          type: string
